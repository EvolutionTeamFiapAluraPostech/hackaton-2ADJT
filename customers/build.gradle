plugins {
    id 'java'
    id 'org.springframework.boot' version "${versionSpringBoot}"
    id 'io.spring.dependency-management' version "${versionSpringDependencyManagement}"
}

group = 'br.com.fiap'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versionSpringDocOpenApi}"
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation "io.jsonwebtoken:jjwt:${versionJjwt}"
    implementation "com.auth0:java-jwt:${versionJavaJwt}"
    implementation "org.hamcrest:hamcrest:${versionHamcrest}"
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test:${versionSpringSecurityTest}"
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation "org.testcontainers:testcontainers:${versionTestContainers}"
    testImplementation "org.testcontainers:junit-jupiter:${versionTestContainers}"
    testImplementation "org.testcontainers:postgresql:${versionTestContainers}"
    testImplementation "com.tngtech.archunit:archunit:${versionArchUnit}"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

/*tasks.withType(Test).configureEach {
	description = 'Runs the unit tests.'
	group = 'verification'
	useJUnitPlatform({
		excludeTags 'integrationTest'
	})
}

tasks.register('integrationTest', Test) {
	description = 'Runs the integration tests.'
	group = 'verification'
	useJUnitPlatform {
		includeTags 'integrationTest'
	}
}*/
